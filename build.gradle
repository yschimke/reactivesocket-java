/*
 * Copyright 2015-2018 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.gradle.build-scan' version '1.14'

    id 'com.github.sherter.google-java-format' version '0.7.1'
    id 'com.jfrog.artifactory' version '4.7.4'
    id 'com.jfrog.bintray' version '1.8.3'
    id 'me.champeau.gradle.jmh' version '0.4.6' apply false
    id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
    id 'io.morethan.jmhreport' version '0.7.0' apply false
    id 'com.github.ben-manes.versions' version '0.20.0'
}

subprojects {
    apply plugin: 'io.spring.dependency-management'

    dependencyManagement {
        imports {
            // TODO: Upgrade to latest version
            mavenBom 'io.projectreactor:reactor-bom:Bismuth-SR10'
        }

        dependencies {
            dependency 'ch.qos.logback:logback-classic:1.2.3'
            dependency 'com.google.code.findbugs:jsr305:3.0.2'
            dependency 'io.netty:netty-buffer:4.1.24.Final'
            dependency 'io.aeron:aeron-all:1.4.1'
            dependency 'io.micrometer:micrometer-core:1.0.5'
            dependency 'org.assertj:assertj-core:3.10.0'
            dependency 'org.hdrhistogram:HdrHistogram:2.1.10'
            dependency 'org.jctools:jctools-core:2.1.2'
            dependency 'org.mockito:mockito-core:2.19.0'
            dependency 'org.openjdk.jmh:jmh-core:1.21'
            dependency 'org.slf4j:slf4j-api:1.7.25'

            dependencySet(group: 'org.junit.jupiter', version: '5.2.0') {
                entry 'junit-jupiter-api'
                entry 'junit-jupiter-engine'
            }

            // TODO: Remove after JUnit5 migration
            dependency 'junit:junit:4.12'
            dependency 'org.hamcrest:hamcrest-library:1.3'
            dependencySet(group: 'org.junit.vintage', version: '5.2.0') {
                entry 'junit-vintage-engine'
            }

            dependencySet(group: 'org.openjdk.jmh', version: '1.21') {
                entry 'jmh-core'
                entry 'jmh-generator-annprocess'
            }
        }
    }

    repositories {
        mavenCentral()
    }

    plugins.withType(JavaPlugin) {
        compileJava {
            sourceCompatibility = 1.8

            // TODO: Cleanup warnings so no need to exclude
            options.compilerArgs << '-Xlint:all,-overloads,-rawtypes,-unchecked'
        }

        javadoc {
            options.with {
                links 'https://docs.oracle.com/javase/8/docs/api/'
                links 'https://projectreactor.io/docs/core/release/api/'
                links 'https://netty.io/4.1/api/'
            }
        }

        test {
            useJUnitPlatform()

            systemProperty "io.netty.leakDetection.level", "ADVANCED"
        }
    }

    plugins.withType(JavaLibraryPlugin) {
        task sourcesJar(type: Jar) {
            classifier 'sources'
            from sourceSets.main.allJava
        }

        task javadocJar(type: Jar, dependsOn: javadoc) {
            classifier 'javadoc'
            from javadoc.destinationDir
        }
    }

    plugins.withType(MavenPublishPlugin) {
        publishing {
            publications {
                maven(MavenPublication) {
                    groupId 'io.rsocket'

                    from components.java

                    artifact sourcesJar
                    artifact javadocJar

                    pom.withXml {
                        asNode().':version' + {
                            resolveStrategy = DELEGATE_FIRST

                            name project.name
                            description project.description
                            url 'http://rsocket.io'

                            licenses {
                                license {
                                    name 'The Apache Software License, Version 2.0'
                                    url 'http://www.apache.org/license/LICENSE-2.0.txt'
                                }
                            }

                            developers {
                                developer {
                                    id 'robertroeser'
                                    name 'Robert Roeser'
                                    email 'robert@netifi.com'
                                }
                                developer {
                                    id 'rdegnan'
                                    name 'Ryland Degnan'
                                    email 'ryland@netifi.com'
                                }
                                developer {
                                    id 'yschimke'
                                    name 'Yuri Schimke'
                                    email 'yuri@schimke.ee'
                                }
                            }

                            scm {
                                connection 'scm:git:https://github.com/rsocket/rsocket-java.git'
                                developerConnection 'scm:git:https://github.com/rsocket/rsocket-java.git'
                                url 'https://github.com/rsocket/rsocket-java'
                            }
                        }
                    }
                }
            }
        }
    }
}

apply from: 'artifactory.gradle'
apply from: 'bintray.gradle'

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
}

description = 'RSocket: Stream Oriented Messaging Passing with Reactive Stream Semantics.'

googleJavaFormat {
    toolVersion = '1.5'
}

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/libs-snapshot' }
}
